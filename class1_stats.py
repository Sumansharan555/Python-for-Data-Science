# -*- coding: utf-8 -*-
"""class1.stats.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IFm1V-LlranL9SJVVhM1OLeNcee-aFim
"""

import pandas as pd

#df = pd.read_csv('/fortune500.excel.csv')
#df = pd.read_csv('/content/fortune 500.excel.csv')
df = pd.read_csv('/content/fortune 500.excel.csv')
df

df.head()

df.tail()

df.info()

df.shape

sub_df= df[['Rank','Title','Employees','Sector','Revenues','Profits']]
sub_df.head()

d3=df['Title']
d3.head()

sub_df.describe()

mean=sub_df['Profits'].mean()
mean

mean=sub_df['Revenues'].mean()
mean

mode=sub_df['Employees'].mode()
mode

mode=sub_df['Profits'].mode()
mode

I=sub_df['Profits'].max()
I

S=sub_df['Profits'].min()
S

range=I-S
range

r=sub_df['Profits'].max()-sub_df['Profits'].min()
r

df.sort_values(by='Profits',ascending=False).head(10)

sub_df.describe()

sub_df.describe().to_csv('sub_df.csv')

sub_df

mode2=sub_df['Revenues'].mode()
mode2

q1=sub_df['Profits'].quantile(0.25)
q3=sub_df['Profits'].quantile(0.75)
print(q1)
print(q3)
#find the inter quartile range
IQR=q3-q1
IQR

iqr2=sub_df['Revenues'].quantile(0.75)-sub_df['Revenues'].quantile(0.25)
iqr2



"""# 37th percentile  .quantile(0.37)"""

q37=sub_df['Profits'].quantile(0.37)
q37

iqr2=sub_df['Profits'].quantile(0.75)-sub_df['Profits'].quantile(0.25)
iqr2

sd=sub_df['Profits'].std()
sd

mean=sub_df['Profits'].mean()
mean

# calculate the coefficient of variation for profits column
cv=sd/mean
cv

cv=sd/mean*100
cv



"""#for the profits column, decide which type of skewness is being followed"""

skew=sub_df['Profits'].skew()
skew



"""skew>mean and positive , hence right skewness"""

sub_df.sample(5)

sub_df.sample(frac=0.01)

#
sub_df.sample(frac=0.7)['Profits'].mean()

x=sub_df.sample(frac=0.7)['Profits'].mean()
x

df2=sub_df.sample(frac=0.7)
df2['Profits'].mean()

#FIXING THE RANDOM ROWS
df2=sub_df.sample(frac=0.7, random_state=2)
df2['Profits'].mean()

df2=sub_df.sample(frac=0.01, random_state=20)
df2['Profits'].mean()

#select 60% random rows from the datadset and
#consider this is a sample.calculate the mean of this samplewith respect to profits column
# repeat the process 5 times. compute the difference between the actual
#mean of the column and each sample mean separately
x=sub_df.sample(frac=0.6,random_state=5)['Profits'].mean()
x

x1=sub_df.sample(frac=0.6)['Profits'].mean()
x2=sub_df.sample(frac=0.6)['Profits'].mean()
x3=sub_df.sample(frac=0.6)['Profits'].mean()
x4=sub_df.sample(frac=0.6)['Profits'].mean()
x5=sub_df.sample(frac=0.6)['Profits'].mean()
print(x1)
print(x2)
print(x3)
print(x4)
print(x5)
x=sub_df['Profits'].mean()
diff1=x-x1
diff2=x-x2
diff3=x-x3
diff4=x-x4
diff5=x-x5
print(diff1)
print(diff2)
print(diff3)
print(diff4)
print(diff5)
x

mean=sub_df['Profits'].mean()
sample_means=[]
for i in range (5):
    sample=sub_df.sample(frac=0.6)['Profits'].mean()
    sapmle_mean=sample['Profits'].mean
    sample_means.append(sample_mean)
    print(f'sample{i+1} mean:{sample_mean},difference:{abs(mean-sample_mean)}')
print(f"\nmean of 'Profits' :{mean}")

q1=sub_df['Profits'].quantile(0.25)
q3=sub_df['Profits'].quantile(0.75)
print(q1)
print(q3)
#find the inter quartile range
IQR=q3-q1
IQR

iqr = sub_df['Revenues'].quantile(0.75) - sub_df['Revenues'].quantile(0.25)
iqr

lower_bound = sub_df['Revenues'].quantile(0.25) - 1.5 * iqr
upper_bound = sub_df['Revenues'].quantile(0.75) + 1.5 * iqr
lower_bound
upper_bound
lower_bound

outliers = sub_df[(sub_df['Revenues'] < lower_bound) | (sub_df['Revenues'] > upper_bound)]
print('outlier rows :')
print(outliers)

iqr = sub_df['Profits'].quantile(0.75) - sub_df['Profits'].quantile(0.25)
iqr
lower_bound = sub_df['Profits'].quantile(0.25) - 1.5 * iqr
upper_bound = sub_df['Profits'].quantile(0.75) + 1.5 * iqr
outliers = sub_df[(sub_df['Profits'] < lower_bound) | (sub_df['Profits'] > upper_bound)]
print('outlier rows :')
print(outliers)
print(len(outliers))

iqr = sub_df['Profits'].quantile(0.75) - sub_df['Profits'].quantile(0.25)
iqr
lower_bound = sub_df['Profits'].quantile(0.25) - 1.5 * iqr
upper_bound = sub_df['Profits'].quantile(0.75) + 1.5 * iqr
outlier1=sub_df['Profits']<lower_bound
outlier2=sub_df['Profits']>upper_bound
outliers=sub_df[outlier1 | outlier2]
print(len(outliers))
print(len(outlier1))
print(len(outlier2))
print(len(outlier1)+len(outlier2))
print(outliers)
print(outlier1)
print(outlier2)
print((outlier1)+len(outlier2))

